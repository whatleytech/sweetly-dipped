---
description: All new or modified code must ship with passing unit tests
globs: ["src/**/*.{ts,tsx,js,jsx}", "server/**/*.{ts,js}"]
alwaysApply: true
---

- Use **Vitest** for unit tests (chosen because we are scaffolding with Vite).
- Every public function, React component, or util added or changed must have a corresponding test file:
  • Colocate tests next to the source with the suffix `.test.ts[x]` **or** place them in `__tests__/` mirroring the folder structure.  
- When generating code:
  1. Scaffold or update the test first (TDD style).
  2. Run `pnpm test` (or `npm test` / `yarn test` depending on `packageManager` in `package.json`).
  3. If any test fails, fix the implementation before moving on. Never leave the repo in a red state.
- Strive for the “test pyramid”:
  • Lots of unit tests → a handful of integration tests → a smoke-level e2e test.  
  For React components, prefer React Testing Library; for hooks, use `@testing-library/react-hooks`.
- Mock external services instead of hitting the network (e.g. Mock Service Worker, msw).